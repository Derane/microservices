services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: raabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring
  #  eureka-server:
  #    image: derane/eureka-server:latest
  #    container_name: eureka-server
  #    environment:
  #      - SPRING_PROFILES_ACTIVE=docker
  #    ports:
  #      - "8761:8761"
  #    depends_on:
  #      - zipkin
  #    networks:
  #      - spring
  #  apigw:
  #    image: derane/apigw:latest
  #    container_name: apigw
  #    environment:
  #        - SPRING_PROFILES_ACTIVE=docker
  #    ports:
  #      - "8083:8083"
  #    depends_on:
  #      - zipkin
  #      - eureka-server
  #    networks:
  #      - spring
  customer:
    image: derane/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
  fraud:
    image: derane/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - postgres
      - spring
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
  notification:
    image: derane/notifications:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
volumes:
  postgres: